namespaceOverride: ""
appHost: &app-host "app.vechr.com"
natsHost: "nats.vechr.com"
#
######################################################## Config for CERT MANAGER ###########################################################
#
certmanager:
  # Will Override TLS Ingresses in above configuration
  ingressTLS:
    enabled: false
    issuer:
      name: letsencrypt-vechr
      email: admin@vechr.com
    name: nginx-vechr-cert-ingress
    hosts: 
      - *app-host
#
########################################################### Config for Ingress ############################################################
#
ingress:
  name: vechr-ingress
  enabled: true
  ingressClassName: nginx

  # Will used this TLS if we not enabled cert manager ingress TLS, but you need enabled `ingress.tls.enabled: true`
  # Usually used this if you want to use your self-signed certificate
  # But if you want to running in cloud just disable this TLS
  #
  tls:
    enabled: true # enable for tls
    secretName: nginx-vechr-cert-dev # if you using development
    hosts: 
      - *app-host
    ca: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVIekNDQXdlZ0F3SUJBZ0lVWWZsYWh1RFkrTXhSVndVb3NIU2hORzNsM3M4d0RRWUpLb1pJaHZjTkFRRUwKQlFBd2daNHhDekFKQmdOVkJBWVRBa2xFTVJNd0VRWURWUVFJREFwS1lYZGhJRUpoY21GME1ROHdEUVlEVlFRSApEQVpEYVcxaGFHa3hFVEFQQmdOVkJBb01DRlpsWTJoeUlFTkJNUjR3SEFZRFZRUUxEQlZEWlhKMGFXWnBZMkYwClpTQkJkWFJvYjNKcGRIa3hGakFVQmdOVkJBTU1EV0Z3Y0M1MlpXTm9jaTVqYjIweEhqQWNCZ2txaGtpRzl3MEIKQ1FFV0QyRmtiV2x1UUhabFkyaHlMbU52YlRBZUZ3MHlNakV5TVRFeE56SXdNelZhRncweU56RXlNVEF4TnpJdwpNelZhTUlHZU1Rc3dDUVlEVlFRR0V3SkpSREVUTUJFR0ExVUVDQXdLU21GM1lTQkNZWEpoZERFUE1BMEdBMVVFCkJ3d0dRMmx0WVdocE1SRXdEd1lEVlFRS0RBaFdaV05vY2lCRFFURWVNQndHQTFVRUN3d1ZRMlZ5ZEdsbWFXTmgKZEdVZ1FYVjBhRzl5YVhSNU1SWXdGQVlEVlFRRERBMWhjSEF1ZG1WamFISXVZMjl0TVI0d0hBWUpLb1pJaHZjTgpBUWtCRmc5aFpHMXBia0IyWldOb2NpNWpiMjB3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURIZjJlSkp4bG03b1hqaUNKZFdvT3dydlRGQkJtRHd5RUgyQlFlZExHck1GRThTZEFkT2EwcHk0UCsKYnZlTUxMWHF4ZDMvTFN3Y3FkcU1QZHNUSytYdWJacjJEeGlWa2FJVzlTMEw4aHlPekNaR0s4eTZFRVVRVDBPYwo5YkRsTHUyaStFZHNYUVZrWVlndjJnaVE3WjNTNTNxSHN4S3o0ZjFIRjl2N2ZsZDZYVXVFTm5Eak9relRvSTRFCmRSTUtId3FxM1lJOUJXdUY2VVQ1N1NqdFFMNGhBWWhER3F2VHRHUE1DWm1HZ2V6OS9ieFU0dVk0d053bm1tRysKdjFDNkJSRnFaandEOFlzbmRRd2ZkV0RKTVJ0dFRueDkyUGpSVkxBWThCd3Vuams4MXByR2JlUW5kNjJEMldPSwpFbGtlUG4zc2xCSlFKc1RzcVFnV3hDY0M0RE1wQWdNQkFBR2pVekJSTUIwR0ExVWREZ1FXQkJUUjJKN1Q1d21nCnhVRmdMSmZ3V1BndldzQ1BQREFmQmdOVkhTTUVHREFXZ0JUUjJKN1Q1d21neFVGZ0xKZndXUGd2V3NDUFBEQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJzUENTcTFlODdUbERhRGJzaApvbDJJY2s2c05tOWwxL1NMcmxWdUxsVU1NcmlQL3YxZmorYTAvV3MyS2ZXaXYzWFJtbGg2aHptNFFSdmN2a3N0CmpNb1A2NitzWU1EZ2kyUUZWamQ4ZzZuZkpiMXkzL2o4dFVLZFc1N3g2QTVwNlpNY3FubWFKWElSWjJ2VUlNMmoKdk5Qa0s3OWFxMUJJSEZBeVVLMksvenlkUjBvY21GL2F5dE41K2xnM0FtWXhtWHE3RGZRU0Z5L3ZOSHZZU3dCaQpxV3U5c0VFQUk1aG5yc0Q2SDFsWnczVFBLd2dxK0JMM0RIS0pLbmM5clpkc3FMMHBSODFEaFo3U2E1R2p2TGRPCmtUeWdyTmpYSU5QZ3RUQzFpTURnUjFxU3hlMXBscTllVWZpZU4yZ0pDL2R1VDZSMU1sc244Sm1YaHVFQXJ6QzcKbndjUAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    cert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVMakNDQXhhZ0F3SUJBZ0lVUUJ6bnNYUGs5NFpRNkl2bStrdCs4ZExzYmtRd0RRWUpLb1pJaHZjTkFRRUwKQlFBd2daNHhDekFKQmdOVkJBWVRBa2xFTVJNd0VRWURWUVFJREFwS1lYZGhJRUpoY21GME1ROHdEUVlEVlFRSApEQVpEYVcxaGFHa3hFVEFQQmdOVkJBb01DRlpsWTJoeUlFTkJNUjR3SEFZRFZRUUxEQlZEWlhKMGFXWnBZMkYwClpTQkJkWFJvYjNKcGRIa3hGakFVQmdOVkJBTU1EV0Z3Y0M1MlpXTm9jaTVqYjIweEhqQWNCZ2txaGtpRzl3MEIKQ1FFV0QyRmtiV2x1UUhabFkyaHlMbU52YlRBZUZ3MHlOREEyTWpNd056TXpORFphRncweU5UQTJNak13TnpNegpORFphTUlHTU1Rc3dDUVlEVlFRR0V3SkpSREVUTUJFR0ExVUVDQXdLU21GM1lTQkNZWEpoZERFUE1BMEdBMVVFCkJ3d0dRMmx0WVdocE1RNHdEQVlEVlFRS0RBVjJaV05vY2pFUE1BMEdBMVVFQ3d3R1JHVjJUM0J6TVJZd0ZBWUQKVlFRRERBMWhjSEF1ZG1WamFISXVZMjl0TVI0d0hBWUpLb1pJaHZjTkFRa0JGZzloWkcxcGJrQjJaV05vY2k1agpiMjB3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRHZGYjRQY01GZXRuOTk2OS84CndlM243SGJsdk1Ga2p6VmllOVlaSTNZb0tNekV1R2lBUnkyOXZXUDFpekEyTnRPN3RTUS9UQ3B5Q25UN215WWsKSlovQ3dxbS9sd3EvVlI0Mll3cElXM0hxVktVYmEveDdPVHhTMFlGVkZsaUhDOE5GMVovc0VSbnUyVDBja0dkLwp6TnkxbFFDTVU2LzRLTGNHM3AweTdFTkxHVC9VSkdOOHRNWWJQQlFqdDBpL1UvSjZPSU14eC92d0txV1NHOVdXCmlOR2hQNGhtRzdDYXArQmlBenFrQTNGc3NmU0t5cUlzbk5BV2FIaFRmbDRlQ2VVa21uSHY5a0psRDRwRzEzdEoKbWowQVFDSmE4Slp3V2lNMGYwcjJITlZSKy9Rb25xWmFjRjJnTTNicHo1T25uUFpkcWk1TGlzRXpxQkV6Q3BVegozY2ZyQWdNQkFBR2pkREJ5TUI4R0ExVWRJd1FZTUJhQUZOSFludFBuQ2FERlFXQXNsL0JZK0M5YXdJODhNQWtHCkExVWRFd1FDTUFBd0N3WURWUjBQQkFRREFnVHdNQmdHQTFVZEVRUVJNQStDRFdGd2NDNTJaV05vY2k1amIyMHcKSFFZRFZSME9CQllFRk5NQSt3dnEyam9UQzRHcTlDZVFValBuWnZlQk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQgpBUUJOektFUkdPMXpybmJ0UTdBdnlOZmxYc0JheGtudEQxRHNIOHozMWt0V3B3QnV3RnFrWThQSW5zbmM3ekpoCmJvdFFhRUhkNjROQzhMNXlBWWgwK3Jzck0xU1V5VG4reVJ3LzlmNUlHS3pZN25IbFdWVTJaUHI2T2o4bHRjMzAKRlpLQ1Yzd1p1RzFuNmUrY21VVHpFTnJXcWkxcUkvSkE2YkxLa3RsUTFnUlM5L1hodFZJZWo3Y2YzTkNjUU5pbQpZQ1hvVVpiQkNaUHh5a2FudGFJVFFkTEk0QUhzR3BlNHhQSHBCQWcyaFdIbm1HaTBNVjF2dHQ0YTdHcW9XSnpwCk1Na2E1QUU3YzdFVnNmM2MyVDJQODhwdVlUZ3luK1Z0QXV1VDVsREhKNEVwU2U1andUR21MMHRnV3Rrc1RPUVkKVUdjTm02RkhwclZLU3dOdzI3UTltaTZpCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV1Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktRd2dnU2dBZ0VBQW9JQkFRRHZGYjRQY01GZXRuOTkKNjkvOHdlM243SGJsdk1Ga2p6VmllOVlaSTNZb0tNekV1R2lBUnkyOXZXUDFpekEyTnRPN3RTUS9UQ3B5Q25UNwpteVlrSlovQ3dxbS9sd3EvVlI0Mll3cElXM0hxVktVYmEveDdPVHhTMFlGVkZsaUhDOE5GMVovc0VSbnUyVDBjCmtHZC96TnkxbFFDTVU2LzRLTGNHM3AweTdFTkxHVC9VSkdOOHRNWWJQQlFqdDBpL1UvSjZPSU14eC92d0txV1MKRzlXV2lOR2hQNGhtRzdDYXArQmlBenFrQTNGc3NmU0t5cUlzbk5BV2FIaFRmbDRlQ2VVa21uSHY5a0psRDRwRwoxM3RKbWowQVFDSmE4Slp3V2lNMGYwcjJITlZSKy9Rb25xWmFjRjJnTTNicHo1T25uUFpkcWk1TGlzRXpxQkV6CkNwVXozY2ZyQWdNQkFBRUNnZ0VBWFpRNWlZcWRMVWlxT3l1OVJvM1RaQ0VpWW9hUWZaOHVDb2VsQTc3bEN3LzUKSWhCNTJxZkJpQkFlbFdldTdiRmxDNFg1azRybzNDMHFuNmFZOWJJQ1I3Vnd3b3hJaVI0MFRwNVNVb0wwWWY5UwpocHFzUHNEbTB4V3NsUlREZnN4RVdNdW1KanlGVlg4VEUrQ1RtaXFod3JMNC9YUHVIdWcweDB3UDVIUWtYTHBhCkdmTWVDRm9uNXNINjVlVllMTkNJZEthNFRxakNBUHdmVjNrWEZ5ODdKdU8zRzArVCtxZWVtWDE2WW92N1RpSWEKc2s3czNTWjgrMUNzekxaU2Rzc2VCZmxzU2NwR0o0Z0x0bTRtUzRZNmY1NitRRTl3OGVMY05XMGNrZzhqRHNFUQowNm13d3c1Qm5BUHU4YllYSElVVmdacm9YT3FZTDRVTFVUNWhPOE9YbVFLQmdRRDZlTFZvRXV4cXk3Ui85YUdHCk5iY3NVdjE4VCtOZ2N2ZHg5L3l6SkFnakcvVFp3STFmc1hjM3U4VG9Ta1dRL2VidGZSME1BZStPSWVCUEd6V3QKQUVsdnBhOGR4NXVlWTV3S2w1cW1BUEJGbXF0bFNOUnY4S010eDRsV1g4ZjFpRzY1dHh5dDdZZFRZbUdxaldpagpnM1NDa05nNHdTZkNxYjVHS3d2ckI3TTQ2UUtCZ1FEMFhMR2MrOFdtUzdHSnNUNWtlRjY0bmw2QVBVMnZNbTNkCmc2Y0tYM3BMMC9oRFY2RituSlFGZDNFYkU1V01uc2hPQXZWYkFVV0ZIejZRRytlaXBpKy9OaWxCckRWTDNDVHIKWGozd1REbjl6akFxeTJLa0dsbTlncCs5S0ROMTBRdWMvT1JpR0d1THVuQTYzMGRKMnNzc3V5MHZtYng2YnU5cgpISDhmSGFiMXN3S0JnRWk3dXJvQkhNUWFhVXpyTUQ5LzQ3UXNXVTI3Q1NVZDNYc3I3eWE2Sk43RkpJSURKMHFOCmh6Z1kvNklReDBqR1lrTytuQ3U3ZUN3RzdGTXNiSmJUU1gveFZmdkkxZ2pWbGgrQlRMZzk5NGZPMVV5eExIZGgKSXBHTnF2VDVGV0RZZ0liUGhMV0JEMVlJY0tJTk5FQ2ZVTHNGZ3JSZ2FzSmRkbEo3OTVjRmdtYlpBb0dBWEZYYQpWM05ia0NieUF4R1NmZXh0L2x6NVlJUEpvdlh2UmRERmdjbnFNRlQ4YnBYaVZERmVUV0tBdnJaN3dCTVBwVXJBCjQ0NXJjbzRIMmZSeFpxaGRTbWR3MTN2Mjk1OUw1QlJNVzB5eWJSRklhaU5JTnJJdVRzblpDbVR5YlFaODJPbEcKY3pxL0NLRitYd0NYczNTVmFXV2hBV2VhTExsV2hxYlI4alFHTHJrQ2YycjFoQWw4cmVkdjN2amxGUVhSZEZ3NgpMWTcrTjZrVThmenU0K2ZMUTVEUkdWY3lJWHArZWswRmRFU1ptWW0vZVlYSDRIdWdRVTZySUhvOGRXZ1BYV0M0CjNFRnEyZDhTc2dzSTd5aHlxTWxRcU5sRW84cXQzU2RTS1lpZFQ5dFhJVEFuM1JQZmV0Y1NhTWpvUlMrdGc4MEcKYUQveTB4dm50dFN1cUU5OFJ3TT0KLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQo=
  
  rules:
    -
      host: *app-host
      services:
        # backend auth
        -
          name: vechr-microservice-service
          path: /api/auth/v1
          port: 3005
        -
          name: vechr-microservice-service
          path: /api/auth/docs
          port: 3005
        # backend things
        -
          name: vechr-microservice-service
          path: /api/things/v1
          port: 3001
        -
          name: vechr-microservice-service
          path: /api/things/docs
          port: 3001
        # frontend
        -
          name: vechr-frontend-web-app
          path: /
          port: 80

#        
############################################################ Config for Monitoring ##########################################################
# Before you enabled the monitoring, you need to install vechr monitoring
# helm install vechr-monitoring vechr/vechr-monitoring -n monitoring --create-namespace
# or visit this artifacthub https://artifacthub.io/packages/helm/vechr/vechr-monitoring
#
monitoring:
  enabled: true

  loki:
    host: http://loki-service.monitoring.svc.cluster.local:3100
    username:
    password:
  
  otlp:
    host: http://tempo-service.monitoring.svc.cluster.local:4318/v1/traces

  podMonitor:
    # Namespace of your monitoring system
    namespace: monitoring
    # Job Label
    jobLabel: ""
    podTargetLabels: []

#
############################################################ Config for Frontend ############################################################
#
frontend:
  name: web-app
  image: asia-southeast2-docker.pkg.dev/vechr-iiot-389413/vechr-iiot-repository/web-app
  tag: v1.5.1
  enabled: true

  # imagePullPolicy: Always is recommended when using latest tags. Otherwise, please use IfNotPresent
  imagePullPolicy: Always

  port: 80
  externalPort: 80
  nodePort: 30035

  # Resource
  resources:
    requests:
      memory: "100Mi"
      cpu: "100m"
    limits:
      memory: "1024Mi"
      cpu: "1"

#
######################################################### Config for Microservices ########################################################
#
microservices:
  -
    enabled: true
    name: auth-service
    image: asia-southeast2-docker.pkg.dev/vechr-iiot-389413/vechr-iiot-repository/auth-service
    tag: v1.3.3

    # imagePullPolicy: Always is recommended when using latest tags. Otherwise, please use IfNotPresent
    imagePullPolicy: Always

    # these will be passed as environment variables
    env:
      - name: JWT_SECRET
        value: "secretvechr"
      - name: ECRYPTED_SECRET
        value: "usersecret"
      - name: JWT_EXPIRES_IN
        value: "3d"
      - name: JWT_REFRESH_EXPIRES_IN
        value: "30d"
      - name: INITIAL_SITE
        value: '{"code":"ST1","name":"Site Default","location":"Server Default"}'
      - name: INITIAL_SUPERUSER
        value: '{"fullName":"Administrator","name": "admin","email":"admin@vechr.com","phoneNumber":"+62","password":"admin"}'
      - name: COOKIE_SAME_SITE
        value: "none"
      - name: COOKIE_SECURE
        value: true
      - name: COOKIE_HTTP_ONLY
        value: true

    databaseName: auth_db

    # Will not use if enabled the postgresql in below config! IMPORTANT!
    db:
      serviceName: postgres-service
      username: vechrUser
      password: vechr123
      port: 5432
    
    # Will not use if enabled the redis in below config! IMPORTANT!
    redis:
      serviceName: redis-ext-service
      port: 6379

    externalPort: 3005
    nodePort: 30037

    # Resource
    resources:
      requests:
        memory: "300Mi"
        cpu: "300m"
      limits:
        memory: "1024Mi"
        cpu: "1"

    hpa:
      enabled: false
      minReplicas: 2
      maxReplicas: 4
      averageUtilization: 70
  -
    enabled: true
    name: db-logger-service
    image: asia-southeast2-docker.pkg.dev/vechr-iiot-389413/vechr-iiot-repository/db-logger-service
    tag: v1.4.4

    # imagePullPolicy: Always is recommended when using latest tags. Otherwise, please use IfNotPresent
    imagePullPolicy: Always

    # these will be passed as environment variables
    env:
      - name: JWT_SECRET
        value: "secretvechr"
      - name: ECRYPTED_SECRET
        value: "usersecret"
      - name: JWT_EXPIRES_IN
        value: "3d"
      - name: INFLUX_TOKEN
        value: "vechr-token"
      - name: INFLUX_ORG
        value: "Vechr"
      - name: INFLUX_BUCKET
        value: "Vechr"

    # Will not use if enabled the influx in below config! IMPORTANT!
    influx:
      serviceName: influx-service
      port: 8086

    externalPort: 3003
    nodePort: 30038

    # Resource
    resources:
      requests:
        memory: "300Mi"
        cpu: "300m"
      limits:
        memory: "1024Mi"
        cpu: "1"

    hpa:
      enabled: true
      minReplicas: 2
      maxReplicas: 6
      averageUtilization: 70
  -
    enabled: true
    name: notification-service
    image: asia-southeast2-docker.pkg.dev/vechr-iiot-389413/vechr-iiot-repository/notification-service
    tag: v1.2.4

    # imagePullPolicy: Always is recommended when using latest tags. Otherwise, please use IfNotPresent
    imagePullPolicy: Always

    # these will be passed as environment variables
    env:
      - name: JWT_SECRET
        value: "secretvechr"
      - name: ECRYPTED_SECRET
        value: "usersecret"
      - name: JWT_EXPIRES_IN
        value: "3d"
      - name: EMAIL_ID
        value: isnaen71@gmail.com
      - name: EMAIL_PASS
        value: ofhbzrgtvmzbgrlh

    smtp:
      serviceName: gmail-service
      port: 587

    externalPort: 3002
    nodePort: 30039

    # Resource
    resources:
      requests:
        memory: "300Mi"
        cpu: "300m"
      limits:
        memory: "1024Mi"
        cpu: "1"

    hpa:
      enabled: false
      minReplicas: 1
      maxReplicas: 2
      averageUtilization: 70
  -
    enabled: true
    name: things-service
    image: asia-southeast2-docker.pkg.dev/vechr-iiot-389413/vechr-iiot-repository/things-service
    tag: v1.3.2

    # imagePullPolicy: Always is recommended when using latest tags. Otherwise, please use IfNotPresent
    imagePullPolicy: Always

    # these will be passed as environment variables
    env:
      - name: JWT_SECRET
        value: "secretvechr"
      - name: ECRYPTED_SECRET
        value: "usersecret"
      - name: JWT_EXPIRES_IN
        value: "3d"
      - name: JWT_REFRESH_EXPIRES_IN
        value: "30d"
      - name: COOKIE_SAME_SITE
        value: "none"
      - name: COOKIE_SECURE
        value: true
      - name: COOKIE_HTTP_ONLY
        value: true

    databaseName: things_db

    # Will not use if enabled the postgresql in below config! IMPORTANT!
    db:
      serviceName: postgres-service
      username: vechrUser
      password: vechr123
      port: 5432

    # Will not use if enabled the redis in below config! IMPORTANT!
    redis:
      serviceName: redis-ext-service
      port: 6379

    externalPort: 3001
    nodePort: 30040
      
    # Resource
    resources:
      requests:
        memory: "300Mi"
        cpu: "300m"
      limits:
        memory: "1024Mi"
        cpu: "1"

    hpa:
      enabled: false
      minReplicas: 1
      maxReplicas: 2
      averageUtilization: 70

#  
############################################################# Config for NATS #############################################################
# Required for NATS TLS
natsSelfSigned:
  secretName: nats-vechr-cert
  ca: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVIekNDQXdlZ0F3SUJBZ0lVWWZsYWh1RFkrTXhSVndVb3NIU2hORzNsM3M4d0RRWUpLb1pJaHZjTkFRRUwKQlFBd2daNHhDekFKQmdOVkJBWVRBa2xFTVJNd0VRWURWUVFJREFwS1lYZGhJRUpoY21GME1ROHdEUVlEVlFRSApEQVpEYVcxaGFHa3hFVEFQQmdOVkJBb01DRlpsWTJoeUlFTkJNUjR3SEFZRFZRUUxEQlZEWlhKMGFXWnBZMkYwClpTQkJkWFJvYjNKcGRIa3hGakFVQmdOVkJBTU1EV0Z3Y0M1MlpXTm9jaTVqYjIweEhqQWNCZ2txaGtpRzl3MEIKQ1FFV0QyRmtiV2x1UUhabFkyaHlMbU52YlRBZUZ3MHlNakV5TVRFeE56SXdNelZhRncweU56RXlNVEF4TnpJdwpNelZhTUlHZU1Rc3dDUVlEVlFRR0V3SkpSREVUTUJFR0ExVUVDQXdLU21GM1lTQkNZWEpoZERFUE1BMEdBMVVFCkJ3d0dRMmx0WVdocE1SRXdEd1lEVlFRS0RBaFdaV05vY2lCRFFURWVNQndHQTFVRUN3d1ZRMlZ5ZEdsbWFXTmgKZEdVZ1FYVjBhRzl5YVhSNU1SWXdGQVlEVlFRRERBMWhjSEF1ZG1WamFISXVZMjl0TVI0d0hBWUpLb1pJaHZjTgpBUWtCRmc5aFpHMXBia0IyWldOb2NpNWpiMjB3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURIZjJlSkp4bG03b1hqaUNKZFdvT3dydlRGQkJtRHd5RUgyQlFlZExHck1GRThTZEFkT2EwcHk0UCsKYnZlTUxMWHF4ZDMvTFN3Y3FkcU1QZHNUSytYdWJacjJEeGlWa2FJVzlTMEw4aHlPekNaR0s4eTZFRVVRVDBPYwo5YkRsTHUyaStFZHNYUVZrWVlndjJnaVE3WjNTNTNxSHN4S3o0ZjFIRjl2N2ZsZDZYVXVFTm5Eak9relRvSTRFCmRSTUtId3FxM1lJOUJXdUY2VVQ1N1NqdFFMNGhBWWhER3F2VHRHUE1DWm1HZ2V6OS9ieFU0dVk0d053bm1tRysKdjFDNkJSRnFaandEOFlzbmRRd2ZkV0RKTVJ0dFRueDkyUGpSVkxBWThCd3Vuams4MXByR2JlUW5kNjJEMldPSwpFbGtlUG4zc2xCSlFKc1RzcVFnV3hDY0M0RE1wQWdNQkFBR2pVekJSTUIwR0ExVWREZ1FXQkJUUjJKN1Q1d21nCnhVRmdMSmZ3V1BndldzQ1BQREFmQmdOVkhTTUVHREFXZ0JUUjJKN1Q1d21neFVGZ0xKZndXUGd2V3NDUFBEQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJzUENTcTFlODdUbERhRGJzaApvbDJJY2s2c05tOWwxL1NMcmxWdUxsVU1NcmlQL3YxZmorYTAvV3MyS2ZXaXYzWFJtbGg2aHptNFFSdmN2a3N0CmpNb1A2NitzWU1EZ2kyUUZWamQ4ZzZuZkpiMXkzL2o4dFVLZFc1N3g2QTVwNlpNY3FubWFKWElSWjJ2VUlNMmoKdk5Qa0s3OWFxMUJJSEZBeVVLMksvenlkUjBvY21GL2F5dE41K2xnM0FtWXhtWHE3RGZRU0Z5L3ZOSHZZU3dCaQpxV3U5c0VFQUk1aG5yc0Q2SDFsWnczVFBLd2dxK0JMM0RIS0pLbmM5clpkc3FMMHBSODFEaFo3U2E1R2p2TGRPCmtUeWdyTmpYSU5QZ3RUQzFpTURnUjFxU3hlMXBscTllVWZpZU4yZ0pDL2R1VDZSMU1sc244Sm1YaHVFQXJ6QzcKbndjUAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  cert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZDekNDQS9PZ0F3SUJBZ0lVUUJ6bnNYUGs5NFpRNkl2bStrdCs4ZExzYmtVd0RRWUpLb1pJaHZjTkFRRUwKQlFBd2daNHhDekFKQmdOVkJBWVRBa2xFTVJNd0VRWURWUVFJREFwS1lYZGhJRUpoY21GME1ROHdEUVlEVlFRSApEQVpEYVcxaGFHa3hFVEFQQmdOVkJBb01DRlpsWTJoeUlFTkJNUjR3SEFZRFZRUUxEQlZEWlhKMGFXWnBZMkYwClpTQkJkWFJvYjNKcGRIa3hGakFVQmdOVkJBTU1EV0Z3Y0M1MlpXTm9jaTVqYjIweEhqQWNCZ2txaGtpRzl3MEIKQ1FFV0QyRmtiV2x1UUhabFkyaHlMbU52YlRBZUZ3MHlOREEyTWpNd056TTJNVE5hRncweU5UQTJNak13TnpNMgpNVE5hTUlHTk1Rc3dDUVlEVlFRR0V3SkpSREVUTUJFR0ExVUVDQXdLU21GM1lTQkNZWEpoZERFUE1BMEdBMVVFCkJ3d0dRMmx0WVdocE1RNHdEQVlEVlFRS0RBVjJaV05vY2pFUE1BMEdBMVVFQ3d3R1JHVjJUM0J6TVJjd0ZRWUQKVlFRRERBNXVZWFJ6TG5abFkyaHlMbU52YlRFZU1Cd0dDU3FHU0liM0RRRUpBUllQWVdSdGFXNUFkbVZqYUhJdQpZMjl0TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF2K0RFMW5JcHZJakRBUStTCnhVRjNWQmx4bVdnWGNyTmsvRjI5VXJUMzRZQWNOTHIyM212Y3RtS3BVcjNxbzZ4TlliSHgydVRmSlFsaXpKR0YKaGVmR0NHOS9MWDBQTWplVkFuTmFtOG1lUUg3THRqeVpvakM5SHZTc3dkVVhPcjJmM1hUN3lJSjVnL1BCejZ3ZApjbStEaWRSYTJIc3NZL0lRU3lJdjZZSW9rbkdvWWh6V2F2ZnkxVTlpd2JsdkZONWQ1enY2QTZjSkdFRTBpUHZkClJWOUJMTjh6OGlSVzh3UGlaOENwRDRjZDZJMlJod0wxaFYzNkVKVlJxQlg0MHNGaVFxaVVjeUE0a0M2TkxrWlUKZEtTcVZVdkl1Q2g0bHVhc2pCVkRBUFQ3bi9QRHRNaVZjVTdXc0JHcGUrOU0zZzN3K28wWm01VEI3NzU5YWt3ZAphOU1GUXdJREFRQUJvNElCVGpDQ0FVb3dId1lEVlIwakJCZ3dGb0FVMGRpZTArY0pvTVZCWUN5WDhGajRMMXJBCmp6d3dDUVlEVlIwVEJBSXdBREFMQmdOVkhROEVCQU1DQlBBd2dlOEdBMVVkRVFTQjV6Q0I1SUlOWVhCd0xuWmwKWTJoeUxtTnZiWUlPYm1GMGN5NTJaV05vY2k1amIyMkNDV3h2WTJGc2FHOXpkSUlMYm1GMGN5MXpaWEoyWlhLQwpJVzVoZEhNdGJHSXVaR1ZtWVhWc2RDNXpkbU11WTJ4MWMzUmxjaTVzYjJOaGJJSWtibUYwY3kxc1lpNXdjbTlrCmRXTjBhVzl1TG5OMll5NWpiSFZ6ZEdWeUxteHZZMkZzZ2lGdVlYUnpMV3hpTG5OMFlXZHBibWN1YzNaakxtTnMKZFhOMFpYSXViRzlqWVd5Q0lXNWhkSE10YkdJdWRHVnpkR2x1Wnk1emRtTXVZMngxYzNSbGNpNXNiMk5oYklJYwpibUYwY3kxc1lpNXhZUzV6ZG1NdVkyeDFjM1JsY2k1c2IyTmhiREFkQmdOVkhRNEVGZ1FVMjdTemtmSHI4WXhRCnVwK1czZE15Y3N5SFlKb3dEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSGZIOXpZY1lONXk5NWt0OW9lai8vM0cKcWtjdWtOZVFaWXNQVnI2eTc5bTJsUGRyZ2c5Y2VrdSs3MVAxWmhrOTVDVGdvM3JPS2x0ZjU5SmtlU0d3blN6cwpSV0Y2Nk9OSTF3d0pVVEtVaTQxSG04eldLVVBGUW1OS1pQaHZWaUhPNkxoYlc4K2pQZEJkR3p2bFY4a0tRalltClFvQnlmUitwc21TRnN6eFZsVHZKSWNiUUkvbTZrVHJqTEFJQjFLZGRtYllISDZlZEliTW5ZMVFLYnZReS96aUkKNGZMdk9NZm5kemtBakxFbzlKRllRd1BFWjR4M3d1YkczWmdiei9NMGM3R3lKQVorQk9BejNSVG01Yk44M3hxdwpnYktKSXk1S3dMbEY3eWlKWkZIcFZIVWVMQmxTNlpnSjlpbUdBQSt2b1RpMXFacVl4QUZUd2JPVFM1WkNQSHc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRQy80TVRXY2ltOGlNTUIKRDVMRlFYZFVHWEdaYUJkeXMyVDhYYjFTdFBmaGdCdzB1dmJlYTl5MllxbFN2ZXFqckUxaHNmSGE1TjhsQ1dMTQprWVdGNThZSWIzOHRmUTh5TjVVQ2MxcWJ5WjVBZnN1MlBKbWlNTDBlOUt6QjFSYzZ2Wi9kZFB2SWdubUQ4OEhQCnJCMXliNE9KMUZyWWV5eGo4aEJMSWkvcGdpaVNjYWhpSE5acTkvTFZUMkxCdVc4VTNsM25PL29EcHdrWVFUU0kKKzkxRlgwRXMzelB5SkZiekErSm53S2tQaHgzb2paR0hBdldGWGZvUWxWR29GZmpTd1dKQ3FKUnpJRGlRTG8wdQpSbFIwcEtwVlM4aTRLSGlXNXF5TUZVTUE5UHVmODhPMHlKVnhUdGF3RWFsNzcwemVEZkQ2alJtYmxNSHZ2bjFxClRCMXIwd1ZEQWdNQkFBRUNnZ0VBUE1ML1lrOWxzeHYxOExTUFRHTG1XRjMwVU5tYkwwbnE3Vlg3K2FCd0xOdEcKVTFadmpkREhaSVJLelhaeHd1SHg0VUdaN3JEeWp3WnhZSW1tcUZoVXFHQXlmR094ZDd3Tk5tajBKUWhNVW0wMApzbUZ2WDJLaXlSWS9UT1JmaGt6OVBvSm9wejdXSHppR1ErN2pwbFQwNlNVem5ZRW45Z0IyTTJ6QWttZ1MxQWlZCk9ibUNoY2F6WFlmRzh4eWt5ak5OdmFJWWwwS2lUaldOeWJybXRMaXh3NDljTHBvbUd3dTRoWVVpTStrTEh6WEMKY1FHb01KM1UwbXQwdjJUdllVRWFvcitma2gyZEQ0azRsMWRHUHQxK1hBUzBVa0RNSlNGWTRFaVpCLzEydmlUNQpDZHJMRFUzdE43L3hDY2Zub3ZoRzBTQUlZZWNRVGUvbU4rdXhLY0pMRFFLQmdRRHZhVjNrdzNZRzRVelFid2hjClVPUk5rc0RxQkRxTmx4UHJuTm5iaWs5QmpaWWV0ZERSYUJiNUNhMVhSUGNOdnVNczBPNUJSNi85WWVHYTV1ZUIKVHhSUlZlZ1creXNZb3lCWWhHOEF1Qlcra3hkZjA0bTRiS2FaSXBjdngxTGtRMjJmV3VONW54cWhaaFhmTUVhQwpXamZ3WHJxRGhrays0ZEZZaXRDOTRPSVdQd0tCZ1FETkxFTGZibjI3YkdITFB0ZlUrVk5neG5YcWVjTWVUckpRCmlUSUxIRFEzRGNQSStTdEJ1N25VbGZQTFFaQndYKzRPZ01FWmI2UzBuRXRhL3BEVExPZGV2L1dZZmdGMU1xZGQKY1cxcjdKNmxSK2wrVTN0Y3JRS3FKQ3NvNG9ESWZRWlhGcGJ5aUtTUVRYZGZyRU9CMStJa2xmREcyR1Y3Tll0eQpZTEJWYW9TMy9RS0JnUUMrWDJuREs4NGhnR3dGWGhVbTIwZi9pMCtOaGxsTkY3SkdhNDRzN2RsQ0JpVTJQRnRVCitORXpySWRDMnRzYytncEpLOFlZOExrMzRlcDBzMkdwU0VtZXQ1SDdIRFJUdmZ0Tmg5bUFsK0RxanFwS2o3cDIKaFNjZ3BBbldlMGdsckp4eDErTUVaZ2pXQ0lnaDFwQnF2UFM0VllzNFpNSy9sdTlSMmVoTTVKTERId0tCZ0NaZwpHdm56anF6WnJzajNMaU4xcHZTNDZpRTdPUldZSHA0VnF6aU13Kzl3TWFpTGdsMi9JUmowR3k5dlNmYmEyb24zCjV5WTh6WS9DbEEybkE2dWNBSUttWU9kdTJoTHpzSDQzMHdHV3RtMnZyNnFqTHJXODNueTRXeUpBaTFuMG1KVDkKY3FwV2lJRTlIQkRYQmFGcG9iQzZJdGp1Ykx6STNSWTlvMzIyZUxCNUFvR0FJYXY5NXNMc1pBZW15N1ltNXhsWQpxUldDLyt4UUVsNUpwYUoyb1ZsMWUvRHlET2lYU2lMdEprenNiYkVKSDlUY1dkU3NmbUc2RlN3WUk5dmhudjc1CjdzQTNtN3dwL2t6dWJRa0p1bHEyQ2c3amwxdndYV0Y5QkJKVzZHemxsR3J1Q29oZkk1d2ZCVmV2WHc1VlJQL1QKaGhvNzZKd2p6WlN4NFowS1JJbjBEdG89Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K

#
# For more information you can visit this page https://artifacthub.io/packages/helm/nats/nats/1.0.0
#
nats:
  enabled: true

  # reference a common CA Certificate or Bundle in all nats config `tls` blocks and nats-box contexts
  # note: `tls.verify` still must be set in the appropriate nats config `tls` blocks to require mTLS
  tlsCA:
    enabled: true
    secretName: nats-ca
    dir: /etc/nats-cert/ca
    key: ca.crt

  service:
    enabled: false

    # service port options
    # additional boolean field enable to control whether port is exposed in the service
    # must be enabled in the config section also
    # https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.24/#serviceport-v1-core
    ports:
      nats:
        enabled: true
      leafnodes:
        enabled: true
      websocket:
        enabled: true
      mqtt:
        enabled: true
      cluster:
        enabled: false
      gateway:
        enabled: false
      monitor:
        enabled: false
      profiling:
        enabled: false

  config:
    cluster:
      enabled: true
      port: 6222
      replicas: 3

      tls:
        enabled: true
        # set secretName in order to mount an existing secret to dir
        secretName: nats-routes-tls
        dir: /etc/nats-certs/cluster
        cert: tls.crt
        key: tls.key
        ca: ca.crt

    jetstream:
      enabled: true

      fileStore:
        enabled: true
        dir: /data

        pvc:
          enabled: true
          size: 6Gi

      memoryStore:
        enabled: true
        # ensure that container has a sufficient memory limit greater than maxSize
        maxSize: 2Gi

    nats:
      port: 4222
      tls:
        enabled: true
        # set secretName in order to mount an existing secret to dir
        secretName: nats-vechr-cert
        dir: /etc/nats-certs/nats
        cert: tls.crt
        key: tls.key
        ca: ca.crt
        
    leafnodes:
      enabled: true
      port: 7422
      tls:
        enabled: false
      
      merge:
        authorization:
          user: "nats_leaf"
          password: "n4ts_l34f_s3cr3t"
    
    websocket:
      enabled: true
      port: 9090
      tls:
        enabled: true
        # set secretName in order to mount an existing secret to dir
        secretName: nats-vechr-cert
        dir: /etc/nats-certs/websocket
        cert: tls.crt
        key: tls.key
        ca: ca.crt

        merge:
          verify: false # will skip checking of certificate TLS, if true client need to specify
      
      merge:
        no_tls: false
        same_origin: false
        allowed_origins: []
        authorization:
          username: "nats_user"
          password: "nats_s3cr3t"
      
    mqtt:
      enabled: true
      port: 1883
      tls:
        enabled: true
        # set secretName in order to mount an existing secret to dir
        secretName: nats-vechr-cert
        dir: /etc/nats-certs/mqtt
        cert: tls.crt
        key: tls.key
        ca: ca.crt

    monitor:
      enabled: true
      port: 8222
      tls:
        # config.nats.tls must be enabled also
        # when enabled, monitoring port will use HTTPS with the options from config.nats.tls
        enabled: false

  promExporter:
    enabled: true
    image:
      repository: natsio/prometheus-nats-exporter
      tag: 0.15.0
      pullPolicy:
      registry:

    port: 7777
    # env var map, see nats.env for an example
    env: {}

    # merge or patch the container
    # https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.24/#container-v1-core
    merge: {}
    patch: []

    ############################################################
    # prometheus pod monitor
    ############################################################
    podMonitor:
      enabled: true

      # merge or patch the pod monitor
      # https://prometheus-operator.dev/docs/api-reference/api/#monitoring.coreos.com/v1.PodMonitor
      merge:
        metadata:
          namespace: monitoring
        spec:
          namespaceSelector:
            matchNames:
            - production
      patch: []
      # defaults to "{{ include "nats.fullname" $ }}"
      name:

  natsbox:
    enabled: false

  podTemplate:
    topologySpreadConstraints:
      kubernetes.io/hostname:
        maxSkew: 1
        whenUnsatisfiable: DoNotSchedule

#
############################################################# Config for NGINX #############################################################
#
nginx:
  enabled: true

#
###################################################### Config for Metrics Server ###########################################################
#
metrics-server:
  enabled: true
  args:
    - "--kubelet-insecure-tls"

  metrics:
    enabled: true

  # Make sure you install Prometheus CRDs first
  # Or you install https://artifacthub.io/packages/helm/vechr/vechr-monitoring this will install prometheus CRDs
  #
  serviceMonitor:
    enabled: false
    additionalLabels: {}
    interval: 1m
    scrapeTimeout: 10s
    metricRelabelings: []
    relabelings: []

#
######################################################## Config for GKE ###########################################################
#
gke:
  enabled: false
  ingress:
    # gke class
    class: gce
    # Your address static ip
    staticIP: vechr-iiot-asia-southeast2-prod-ingress-ip

  # You need to assign load balancer IP, please check your Load balancer IP after you provisioning the GKE instance 
  # Note: It might be need some cost to enabled it
  nats:
    loadBalancerIP: "34.101.112.48"

#
##################################################### Config for Service External #########################################################
#
serviceExternal:
  services:
    - name: gmail-service
      enabled: true
      externalName: smtp.gmail.com
      ports:
        - port: 587
    - name: postgres-service
      enabled: true
      externalName: host.docker.internal
      ports:
        - port: 5432
    - name: influx-service
      enabled: true
      externalName: host.docker.internal
      ports:
        - port: 8086
    - name: redis-ext-service
      enabled: true
      externalName: host.docker.internal
      ports:
        - port: 6379

#
################################################## Config for Postgresql (Bitnami) #########################################################
#
postgresql:
  # If you enable, then all service will pointing to internal postgresql
  # But if you disable then all service will pointing to service external
  enabled: true

  auth:
    postgresPassword: "vechr123"
    username: "vechrUser"
    password: "vechr123"
  
  containerPorts:
    postgresql: 5432

#
################################################## Config for InfluxDB #########################################################
#
influx:
  # If you enable, then all service will pointing to internal influxdb
  # But if you disable then all service will pointing to service external
  enabled: true

  name: influxdb
  replicas: 2
  deployment:
    image: influxdb
    tag: 2.1.0-alpine
    port: 8086
  influx:
    mode: setup
    organization: Vechr
    bucket: Vechr
    token: vechr-token
  auth:
    username: admin
    password: vehcr123

#
################################################## Config for Redis #########################################################
#
redis:
  # If you enable, then all service will pointing to internal redis
  # But if you disable then all service will pointing to service external
  enabled: true

  name: redis
  replicas: 1
  deployment:
    image: redis
    tag: latest
    port: 6379